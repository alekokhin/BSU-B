2024-01-29 16:33:06 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 24224 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 16:33:06 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interfaces.
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 16:33:07 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 26 ms. Found 11 MongoDB repository interfaces.
2024-01-29 16:33:08 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 16:33:08 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 16:33:08 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 16:33:08 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 16:33:08 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 16:33:08 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1923 ms
2024-01-29 16:33:08 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5eabff6b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 16:33:08 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:242}] to localhost:27017
2024-01-29 16:33:08 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=35700800}
2024-01-29 16:33:08 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:243}] to localhost:27017
2024-01-29 16:33:10 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1e471884, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27261190, org.springframework.security.web.context.SecurityContextPersistenceFilter@605c7a9e, org.springframework.security.web.header.HeaderWriterFilter@98637a2, org.springframework.web.filter.CorsFilter@543b0737, org.springframework.security.web.authentication.logout.LogoutFilter@be6d228, com.dev.mainbackend.security.jwt.AuthTokenFilter@478967eb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d16209e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75527e36, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e46891d, org.springframework.security.web.session.SessionManagementFilter@9f9146d, org.springframework.security.web.access.ExceptionTranslationFilter@7b44bfb8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@118cbded]
2024-01-29 16:33:10 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 16:33:10 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 16:33:10 INFO [main] MainBackendApplication: Started MainBackendApplication in 4.327 seconds (JVM running for 5.411)
2024-01-29 16:33:56 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 15604 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 16:33:56 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:33:57 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interfaces.
2024-01-29 16:33:58 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:33:58 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 16:33:58 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 32 ms. Found 11 MongoDB repository interfaces.
2024-01-29 16:33:58 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 16:33:58 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 16:33:58 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 16:33:58 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 16:33:58 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 16:33:58 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1835 ms
2024-01-29 16:33:59 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2a02e34b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 16:33:59 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:244}] to localhost:27017
2024-01-29 16:33:59 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:245}] to localhost:27017
2024-01-29 16:33:59 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29044200}
2024-01-29 16:34:00 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@79cdf2d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8851ec, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b3f7704, org.springframework.security.web.header.HeaderWriterFilter@1322b575, org.springframework.web.filter.CorsFilter@18b40fe6, org.springframework.security.web.authentication.logout.LogoutFilter@1c72189f, com.dev.mainbackend.security.jwt.AuthTokenFilter@409732fb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3db1ce78, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a3ad8e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7198ab9a, org.springframework.security.web.session.SessionManagementFilter@4c6bba7d, org.springframework.security.web.access.ExceptionTranslationFilter@6ef1c3f7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bab95ca]
2024-01-29 16:34:00 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 16:34:00 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 16:34:00 INFO [main] MainBackendApplication: Started MainBackendApplication in 4.046 seconds (JVM running for 5.041)
2024-01-29 16:34:20 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 25184 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 16:34:20 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 93 ms. Found 1 JPA repository interfaces.
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 16:34:21 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 24 ms. Found 11 MongoDB repository interfaces.
2024-01-29 16:34:22 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 16:34:22 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 16:34:22 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 16:34:22 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 16:34:22 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 16:34:22 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1574 ms
2024-01-29 16:34:22 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2839e3c8]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 16:34:22 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:246}] to localhost:27017
2024-01-29 16:34:22 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:247}] to localhost:27017
2024-01-29 16:34:22 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19958699}
2024-01-29 16:34:23 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45297e7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4dd1548e, org.springframework.security.web.context.SecurityContextPersistenceFilter@48a46b0f, org.springframework.security.web.header.HeaderWriterFilter@7afbf2a0, org.springframework.web.filter.CorsFilter@54bb1194, org.springframework.security.web.authentication.logout.LogoutFilter@d504137, com.dev.mainbackend.security.jwt.AuthTokenFilter@22f8adc2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9f9146d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ef041bb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1109730f, org.springframework.security.web.session.SessionManagementFilter@6f867b0c, org.springframework.security.web.access.ExceptionTranslationFilter@5822ecda, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1aac0a47]
2024-01-29 16:34:23 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 16:34:23 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 16:34:23 INFO [main] MainBackendApplication: Started MainBackendApplication in 3.656 seconds (JVM running for 4.381)
2024-01-29 16:35:19 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 14572 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 16:35:19 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 16:35:19 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 87 ms. Found 1 JPA repository interfaces.
2024-01-29 16:35:20 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 16:35:20 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 16:35:20 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 30 ms. Found 11 MongoDB repository interfaces.
2024-01-29 16:35:20 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 16:35:20 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 16:35:20 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 16:35:20 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 16:35:20 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 16:35:20 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1611 ms
2024-01-29 16:35:21 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5eabff6b]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 16:35:21 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:249}] to localhost:27017
2024-01-29 16:35:21 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:248}] to localhost:27017
2024-01-29 16:35:21 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20975099}
2024-01-29 16:35:22 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@118cbded, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4cc26df, org.springframework.security.web.context.SecurityContextPersistenceFilter@4afd65fd, org.springframework.security.web.header.HeaderWriterFilter@2ff498b0, org.springframework.web.filter.CorsFilter@7848321e, org.springframework.security.web.authentication.logout.LogoutFilter@d504137, com.dev.mainbackend.security.jwt.AuthTokenFilter@7f2b39a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3356ff58, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@b55f5b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f4f843f, org.springframework.security.web.session.SessionManagementFilter@7b44bfb8, org.springframework.security.web.access.ExceptionTranslationFilter@108b121f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40cf6254]
2024-01-29 16:35:22 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 16:35:22 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 16:35:22 INFO [main] MainBackendApplication: Started MainBackendApplication in 3.839 seconds (JVM running for 4.781)
2024-01-29 22:12:11 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 21272 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 22:12:11 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:12:14 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 242 ms. Found 1 JPA repository interfaces.
2024-01-29 22:12:14 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 22:12:14 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 22:12:14 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 53 ms. Found 11 MongoDB repository interfaces.
2024-01-29 22:12:15 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 22:12:15 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 22:12:15 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 22:12:15 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 22:12:16 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 22:12:16 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 4217 ms
2024-01-29 22:12:16 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@7b25ab31]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 22:12:16 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:251}] to localhost:27017
2024-01-29 22:12:16 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:250}] to localhost:27017
2024-01-29 22:12:16 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=76198901}
2024-01-29 22:12:19 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4cc26df, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7848321e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b39e79b, org.springframework.security.web.header.HeaderWriterFilter@d16209e, org.springframework.web.filter.CorsFilter@f4f843f, org.springframework.security.web.authentication.logout.LogoutFilter@645dc557, com.dev.mainbackend.security.jwt.AuthTokenFilter@49b89425, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f86f9cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@adafe19, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b5833ee, org.springframework.security.web.session.SessionManagementFilter@506aa618, org.springframework.security.web.access.ExceptionTranslationFilter@605c7a9e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40bf0e15]
2024-01-29 22:12:19 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 22:12:19 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 22:12:19 INFO [main] MainBackendApplication: Started MainBackendApplication in 9.148 seconds (JVM running for 21.597)
2024-01-29 22:12:54 INFO [nio-8080-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-29 22:12:54 INFO [nio-8080-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-01-29 22:12:54 INFO [nio-8080-exec-2] DispatcherServlet: Completed initialization in 43 ms
2024-01-29 22:12:55 INFO [nio-8080-exec-4] connection: Opened connection [connectionId{localValue:3, serverValue:252}] to localhost:27017
2024-01-29 22:12:55 ERROR [nio-8080-exec-1] JwtUtils: JWT token is expired: JWT expired at 2024-01-29T16:30:02Z. Current time: 2024-01-29T22:12:55Z, a difference of 20573438 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-01-29 22:12:55 ERROR [nio-8080-exec-1] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.jsonwebtoken.ExpiredJwtException: JWT expired at 2024-01-29T16:30:02Z. Current time: 2024-01-29T22:12:55Z, a difference of 20573446 milliseconds.  Allowed clock skew: 0 milliseconds.] with root cause
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2024-01-29T16:30:02Z. Current time: 2024-01-29T22:12:55Z, a difference of 20573446 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at com.dev.mainbackend.controllers.AuthController.refreshToken(AuthController.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.dev.mainbackend.security.jwt.AuthTokenFilter.doFilterInternal(AuthTokenFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1790)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2024-01-29 22:12:55 INFO [nio-8080-exec-4] ItemControllerGe: logeri arii
2024-01-29 22:14:13 INFO [nio-8080-exec-7] ItemControllerGe: logeri arii
2024-01-29 22:44:14 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 13016 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 22:44:14 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 213 ms. Found 1 JPA repository interfaces.
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 22:44:16 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 22:44:17 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 60 ms. Found 11 MongoDB repository interfaces.
2024-01-29 22:44:18 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 22:44:18 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 22:44:18 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 22:44:18 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 22:44:18 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 22:44:18 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 3798 ms
2024-01-29 22:44:19 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@6f8e9d06]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 22:44:19 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:254}] to localhost:27017
2024-01-29 22:44:19 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:253}] to localhost:27017
2024-01-29 22:44:19 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55119600}
2024-01-29 22:44:21 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1109730f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f42366, org.springframework.security.web.context.SecurityContextPersistenceFilter@54be6213, org.springframework.security.web.header.HeaderWriterFilter@5908e6d6, org.springframework.web.filter.CorsFilter@46c662f2, org.springframework.security.web.authentication.logout.LogoutFilter@6dded900, com.dev.mainbackend.security.jwt.AuthTokenFilter@6af78a48, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1426370c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9f9146d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4afdfc0f, org.springframework.security.web.session.SessionManagementFilter@6b2ef50e, org.springframework.security.web.access.ExceptionTranslationFilter@37a67cf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63cf578f]
2024-01-29 22:44:22 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 22:44:22 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 22:44:22 INFO [main] MainBackendApplication: Started MainBackendApplication in 8.469 seconds (JVM running for 10.524)
2024-01-29 22:45:12 INFO [nio-8080-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-29 22:45:12 INFO [nio-8080-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-01-29 22:45:12 INFO [nio-8080-exec-1] DispatcherServlet: Completed initialization in 2 ms
2024-01-29 22:45:13 INFO [nio-8080-exec-2] HikariDataSource: HikariPool-1 - Starting...
2024-01-29 22:45:13 INFO [nio-8080-exec-2] HikariDataSource: HikariPool-1 - Start completed.
2024-01-29 22:45:14 INFO [nio-8080-exec-2] connection: Opened connection [connectionId{localValue:3, serverValue:255}] to localhost:27017
2024-01-29 22:45:14 ERROR [nio-8080-exec-2] AuthEntryPointJwt: Unauthorized error: Bad credentials
2024-01-29 23:04:00 INFO [ionShutdownHook] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-01-29 23:04:00 INFO [ionShutdownHook] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-01-29 23:04:11 INFO [main] MainBackendApplication: Starting MainBackendApplication using Java 19 on WIN-25SGSAVQIO3 with PID 7724 (C:\Users\user\Desktop\main-back\BSU-B\target\classes started by user in C:\Users\user\Desktop\main-back)
2024-01-29 23:04:11 INFO [main] MainBackendApplication: No active profile set, falling back to 1 default profile: "default"
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.AnalyzedTextRepositoryEn; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.ItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.StringRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.SymbolRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.en.WordRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.AnalyzedTextRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.ItemRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.StringRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.SymbolRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationExtensionSupport: Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.dev.mainbackend.repository.ge.WordRepositoryGe; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 219 ms. Found 1 JPA repository interfaces.
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationDelegate: Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-01-29 23:04:13 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 67 ms. Found 11 MongoDB repository interfaces.
2024-01-29 23:04:15 INFO [main] TomcatWebServer: Tomcat initialized with port(s): 8080 (http)
2024-01-29 23:04:15 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8080"]
2024-01-29 23:04:15 INFO [main] StandardService: Starting service [Tomcat]
2024-01-29 23:04:15 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/9.0.79]
2024-01-29 23:04:15 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-01-29 23:04:15 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 3854 ms
2024-01-29 23:04:15 INFO [main] client: MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.6.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/19+36-2238"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@2272cbb0]}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=null}
2024-01-29 23:04:15 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:2, serverValue:257}] to localhost:27017
2024-01-29 23:04:15 INFO [localhost:27017] connection: Opened connection [connectionId{localValue:1, serverValue:256}] to localhost:27017
2024-01-29 23:04:15 INFO [localhost:27017] cluster: Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52366499}
2024-01-29 23:04:18 INFO [main] DefaultSecurityFilterChain: Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e46891d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48632f69, org.springframework.security.web.context.SecurityContextPersistenceFilter@2aa6bbad, org.springframework.security.web.header.HeaderWriterFilter@547aaa32, org.springframework.web.filter.CorsFilter@5fde1d64, org.springframework.security.web.authentication.logout.LogoutFilter@76a1146d, com.dev.mainbackend.security.jwt.AuthTokenFilter@1ec88aa1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f867b0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b5ad306, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5350ab17, org.springframework.security.web.session.SessionManagementFilter@141aba65, org.springframework.security.web.access.ExceptionTranslationFilter@4300e240, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f4f843f]
2024-01-29 23:04:18 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8080"]
2024-01-29 23:04:18 INFO [main] TomcatWebServer: Tomcat started on port(s): 8080 (http) with context path ''
2024-01-29 23:04:18 INFO [main] MainBackendApplication: Started MainBackendApplication in 8.412 seconds (JVM running for 10.39)
2024-01-29 23:04:42 INFO [nio-8080-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-29 23:04:42 INFO [nio-8080-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-01-29 23:04:42 INFO [nio-8080-exec-1] DispatcherServlet: Completed initialization in 2 ms
2024-01-29 23:04:42 INFO [nio-8080-exec-1] connection: Opened connection [connectionId{localValue:3, serverValue:258}] to localhost:27017
2024-01-29 23:05:42 INFO [nio-8080-exec-5] HikariDataSource: HikariPool-1 - Starting...
2024-01-29 23:05:43 INFO [nio-8080-exec-5] HikariDataSource: HikariPool-1 - Start completed.
2024-01-29 23:05:43 INFO [nio-8080-exec-5] AuthController: auth user -> aleko
